name: Docker

on:
  schedule:
    - cron: '19 21 * * *'
  push:
    branches: [ "main" ]
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'

env:
  TEST_TAG: ${{ github.repository }}:test
  LATEST_TAG: ${{ github.repository }}:latest


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
    
      - name: Run and test Docker container
        run: |
          # env
          cron_working='* * * * * echo working-great'
          cron_nonworking='* * * * echo nonworking'
          
          # run
          docker run --name test -e CRON_WORKING="${cron_working}" -e CRON_NOTWORKING="${cron_nonworking}" -d ${{ env.TEST_TAG }}
          
          # check if non working crontab didnt make it to the final
          if [[ $(echo "${cron_working}" | base64) == $(docker exec test crontab -l | base64) ]]; then
            echo ok
          else
            exit 1
          fi

          # check if execution and logging works
          for ((i=0; i<35;i++)); do 
            if docker logs test 2>&1 | grep 'CMD (echo working-great)'; then 
              exit 0
            else 
              echo -n .
              sleep 2
            fi
          done
          exit 1

      - name: Build and push and release
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
